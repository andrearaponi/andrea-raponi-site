[{"content":"Come funziona Immaginatevi un cerchio di sedie virtuali di cui una al centro.\nSiete circondati da: Software Engineer, DevOps Engineer, Cloud Architect, SRE, Security Engineer, System Administrator, Network Engineer, Scrum Master.\nInsomma, tutte figure che compongono un\u0026rsquo;incredibile catena nella industry del software.\nQui siamo in un terreno neutrale, quello di Spaghetti Mastermind, non esistono aziende, ma solo professionisti che si incontrano una volta a settimana con la voglia di condividere una passione comune.\nOgni settimana, uno dei partecipanti sarà al centro dell\u0026rsquo;attenzione, raccontando la propria esperienza e affrontando temi specifici del proprio campo di competenza.\nOgni incontro di Spaghetti Mastermind seguirà una struttura ben definita per massimizzare l\u0026rsquo;apprendimento e la partecipazione di tutti:\nAccoglienza e Introduzione (10 minuti) Iniziamo ogni sessione con un caloroso benvenuto e una breve introduzione sul tema del giorno. Questo è il momento per conoscersi meglio e prepararsi all\u0026rsquo;incontro.\nSessione del Protagonista (30 minuti) Ogni settimana, un membro del mastermind sarà il protagonista. Questa persona condividerà la propria esperienza, parlerà dei progetti su cui sta lavorando e affronterà un argomento specifico legato al proprio ruolo (ad esempio, una nuova tecnica di CI/CD, un caso di successo di implementazione cloud, ecc.).\nDiscussione Aperta e Q\u0026amp;A (30 minuti) Dopo la presentazione, apriamo la discussione a tutti i partecipanti. Questo è il momento per fare domande, offrire feedback e condividere esperienze personali correlate al tema. La collaborazione è la chiave del successo del nostro mastermind.\nCondivisione di Risorse (10 minuti) In questa fase, i partecipanti possono condividere risorse utili come articoli, tool, corsi online o eventi futuri. È un ottimo modo per rimanere aggiornati sulle ultime novità del settore.\nConclusione e Piano per la Prossima Settimana (10 minuti) Concludiamo l\u0026rsquo;incontro riepilogando i punti chiave discussi e definendo il tema e il protagonista della settimana successiva. Questo aiuta a mantenere il flusso degli incontri e a prepararsi in anticipo.\nCome e quando Iniziamo lunedì 4 novembre e ci incontreremo ogni lunedì a seguire! 🙂\nCi saranno aggiornamenti su questo post, nel frattempo se sei interessato, compila questa form ed unisciti alla compagnia!\n","permalink":"https://andrearaponi.it/open-source/spaghetti-mastermind/","summary":"Il Mastermind non partirà da solo. Avrete bisogno di compagnia fidata. Questo è un pericolo che nessuno può affrontare da solo.","title":"Spaghetti Mastermind"},{"content":"\nThose who know me are well aware that my preferred operating system is Linux, but ever since we fully switched to Microsoft in the company, I found myself (once again) having to use WSL (which I have discussed on several occasions and in various talks).\nRegarding WSL, after months of intensive use both as a Developer and DevOps, I can only reaffirm my initial impressions: Microsoft has done a great job.\nThe sore point remains the backup issue, which is currently only possible through CLI and in a synchronous manner.\nFrom this consideration was born the need to develop WSLSnappy, a tool capable of safely and quickly backing up one or more WSL instances!\nI used Go and the power of goroutines, and it was really fun.\nI’m beginning to implement the logic to encrypt these backups and send them to our preferred cloud.\nFor now, I recommend reading the documentation on my repository to understand how to use it. 🙂\nI’ll keep you updated!\n","permalink":"https://andrearaponi.it/open-source/wslsnappy/","summary":"I have built a software written in go to create 𝐟𝐚𝐬𝐭, 𝐫𝐨𝐛𝐮𝐬𝐭, and 𝐩𝐚𝐫𝐚𝐥𝐥𝐞𝐥 backups of your WSL instances.","title":"WSLSnappy"},{"content":"\nWhat you see in the photo is me, 8,000 km away from home, on one of the highest mountains in the world, smiling and happy that this won’t be my last night alive.\n💡 A Near-Death Realization 10 minutes before capturing this image, I was in tears, desperately on the phone with Anita, the call center assistant from my health insurance.\n\u0026ldquo;Andrea, you won’t die on Annapurna, the diagnosis rules out appendicitis; you have a muscular issue near your abdomen.\u0026rdquo;\nReading through several NDEs (near-death experiences), people in those moments encounter visions of loved ones, a world without wars, or even a four-day workweek—like reaching nirvana.\nBut my thoughts? Far less serene:\n\u0026ldquo;My wallets, my passwords, my encrypted disks, my will written at 13…my entire digital identity lost forever.\u0026rdquo;\n🛠️ Birth of Casper This existential crisis led me to create Casper—my digital alter ego designed to securely distribute my digital identity to my heirs (who don’t even know they are heirs).\nFor security reasons, I won’t dive into the technical implementations but will discuss the challenges Casper must overcome to fulfill its role after I cease to exist.\n💀 Are You Alive? Casper must periodically verify if I’m still alive. Since no technology is infallible, it uses redundant and diverse strategies, including:\nRobocalls, push notifications, SMS, email. Sensors (medical devices included). Key Considerations:\nRedundancy: Signals must be sent repeatedly if there’s no response. Resilience: If I’m out climbing Nanga Parbat, Casper shouldn’t assume I’m dead. Only after multiple attempts and checks does Casper declare me deceased and distribute my identity as planned.\n🌍 Redundancy Casper must be distributed globally to ensure resilience. This includes:\nMultiple instances worldwide. At least one self-controlled instance (hardware included) to mitigate cloud-specific disasters. Complete redundancy requires planning for:\nPower sources. Data lines. Hardware failures. 🔒 Security Casper is a courier, not an inspector. It must:\nUse end-to-end encryption. Rely on secure hardware for keys, such as YubiKey. ✅ Test, Test, Test Everything related to Casper should:\nBe open source. Be stable and extensively tested. Undergo rigorous security checks using tools like SonarQube or Kiwan. 💣 Self-Destruct in 3…2…1 Casper must include a self-destruct mechanism to irreversibly erase data across all instances if tampering is suspected.\n🛠️ Maintenance Casper isn’t a \u0026ldquo;set it and forget it\u0026rdquo; project. It requires:\nPeriodic reviews, from the kernel level to user space. Continuous updates to adapt to technological evolution. 👼🏼 Was It Necessary? Absolutely NOT. 😄\nWhile there are safer ways to safeguard one’s digital legacy, Casper was a deeply personal project, driven by my fascination with solving seemingly insurmountable technological challenges.\nFinal Thoughts To this day, Casper ensures I’m alive—and hopefully, it has sparked your curiosity as much as it did mine. 🙂\n","permalink":"https://andrearaponi.it/stories/in-case-i-should-die/","summary":"Have you ever thought about what you\u0026rsquo;ll leave behind after your departure? I have, and Casper will take care of it.","title":"In Case I Should Die: UnexpectedDeathException"},{"content":"Le Migliori Idee Nascono in Movimento Sono arrivato alla conclusione che le idee più interessanti mi sono venute mentre praticavo sport. Forse dovrei vivere in bici o addirittura correndo!\nL’idea di Telly è nata proprio mentre correvo, sommerso da quei fastidiosi “tlin” di notifiche, spesso provenienti da email.\nUna Riflessione sulle Email Per diverso tempo ho utilizzato con grande soddisfazione iRedMail per gestire il mio ex server di posta.\nMa siamo davvero sommersi da processi in background! 😱\nPerché Monitorare i Processi è Cruciale? Nel nostro mondo iperconnesso, monitorare processi come:\nRsync Backup in cloud Restore di container\ne qualsiasi altra automazione è di vitale importanza. Nel mio caso, questi processi giravano come task crontab, con notifiche inviate da un SMTP server. Tuttavia, questo approccio mi ha spesso lasciato sommerso da email inutili, che a volte ho ignorato o perso.\nE Quindi, Perché Telly? 😱 Telegram e i bot sono la soluzione perfetta: uniscono l’immediatezza delle notifiche alla semplicità di un’app di messaggistica.\nUtilizzando le API di Telegram e un semplice bot creato con BotFather, ho sviluppato un command line tool basato su curl-rust per inviare messaggi via bot direttamente dalla riga di comando.\nI Vantaggi di Telly Grazie a Telly, ho sostituito tutte le email di monitoraggio per i miei servizi. Ora, con un colpo d’occhio su Telegram, riesco a leggere istantaneamente ogni notifica.\nPerché Non Usare Direttamente curl? 😅 Utilizzare un’implementazione type safe di curl è una buona idea:\nSi evita la verbosità negli script. Un semplice file di configurazione aggiunge un valore tangibile. Cosa Aspettarsi dal Futuro di Telly Sto già lavorando a una versione evoluta con nuove funzionalità. Questo è solo l’inizio!\nSe volete soppiantare le vecchie email di monitoraggio, trovate il codice su GitHub. 😊\n","permalink":"https://andrearaponi.it/stories/telly-client-telegram-rust/","summary":"Libcurl, rust e 15 minuti liberi per trasformare una mia esigenza in un command line tool.","title":"Telly, una delle mie tante idee nel cassetto"},{"content":"Chi è Kim Scott? Kim Scott è probabilmente una delle team leader più influenti degli ultimi anni.\nDopo essersi laureata ad Harvard e aver iniziato la sua carriera in una fabbrica di diamanti a Mosca, si è trasferita nella Silicon Valley, dove ha guidato team che hanno lavorato su prodotti rivoluzionari come AdSense, DoubleClick e YouTube.\nScott è stata una figura chiave di supporto per i CEO di importanti aziende come Dropbox, Twitter e Qualtrics.\nPerché Kim Scott è così famosa? Kim Scott è conosciuta come l\u0026rsquo;ideatrice di uno stile di gestione chiamato Radical Candor.\nQuesto metodo incoraggia i manager ad affrontare le sfide in modo diretto, evitando di aggirare i problemi. Scott descrive questa metodologia nel suo libro Radical Candor, una guida per adottare uno stile di leadership schietto ma empatico.\nConcetti Chiave di Radical Candor I principi fondamentali di Radical Candor si basano su:\nSincerità e cultura del feedback diretto:\nI manager devono prendersi cura del proprio team non solo a livello professionale, ma anche personale. Affrontare sfide e conflitti faccia a faccia senza ostilità. Portare l\u0026rsquo;umanità nello spazio lavorativo:\nCostruire relazioni professionali solide attraverso cura personale e sfide dirette aiuta a rendere le critiche costruttive e contestualizzate. Comunicazione trasparente:\nDiscussioni aperte e oneste aiutano le aziende a raggiungere i propri obiettivi più rapidamente. Un riassunto ironico del metodo: \u0026ldquo;Menamose però volemose bene\u0026rdquo; (\u0026ldquo;Litighiamo, ma vogliamoci bene\u0026rdquo;). L\u0026rsquo;Importanza di Relazioni Autentiche Costruire rapporti sinceri con i collaboratori rende il feedback più affidabile ed efficace, indipendentemente dalla sua natura. Il libro insegna anche come evitare trappole comuni come aggressività o empatia eccessiva e stucchevole. Un Esempio Pratico: Larry Page Se Larry Page, co-fondatore di Google, non avesse mantenuto un rapporto sincero con il team di AdSense o con Sergey Brin, avrebbe avuto difficoltà a esprimere feedback onesti.\nPerché la Presenza Emotiva è Cruciale nella Leadership Scott sottolinea più volte che una buona leadership richiede presenza emotiva.\nPer guidare efficacemente, è fondamentale comprendere le ambizioni e le passioni dei propri collaboratori. Allineare i loro ruoli con i loro obiettivi di vita aiuta a creare un team coeso e motivato. Perché Leggere Radical Candor? Questa sintesi evidenzia quelli che considero i punti chiave del libro. Tuttavia, leggere il testo completo è essenziale, poiché approfondisce aspetti di autoanalisi per i leader, che sono sia affascinanti che preziosi.\nUn\u0026rsquo;Abilità Indispensabile per Ogni Leader Radical Candor merita un posto nella cassetta degli attrezzi delle soft skills che tutti dovrebbero avere!\nPuoi trovare il libro su Amazon. 🙂\n","permalink":"https://andrearaponi.it/soft-skills/essere-un-buon-leader-kim-scott-ci-spiega-come-fare/","summary":"Da AdSense fino a Youtube, Kim Scott ci svela i segreti del vero leader.","title":"Essere un buon leader: Kim Scott ci spiega come fare"},{"content":"Raised on bread and Thoreau, I went to the woods because I wished to live deliberately, to confront only the essential facts of life, and discovered that no matter how many frameworks you know, algorithms and data structures will always come first.\nI turned on my first computer at age 8, and since then, I’ve never turned off the verbose flag on the Linux kernel in favor of some sleek rotating spinner – I need to understand what’s happening under the hood, constantly.\nThings took a turn in 1999 when I watched The Matrix for the first time in my room with my brother.\nI started coding in Python at 12. TCP/IP and OSI came after, earning me the nickname “Router” in high school.\nFrom Systems Specialist to System Administrator, I decided that path was not truly mine: I love coding and always have.\nI returned to Italy and, after embracing the concept of “non-attachment”, I grew under the sign of the JVM.\nI deeply despise technological fanaticism, and use the languages that best suit each situation.\nI’ve worked with Python, C, Rust, Go, Scala, JavaScript, Lua, and Java – which I deeply love.\nCloudNative represents everything that’s currently in my focus.\nI’m passionate about energy optimization and performance.\nA strong supporter of open-source and an active participant in several communities, without which I’d be nothing.\nIn my free time, I climb mountains, run, code, and read.\nOften, I do all of these on the same day.\n","permalink":"https://andrearaponi.it/about-me/","summary":"☕ Software Craftsman 🧙‍♂️ Linux Wizard 📝 Occasional writer","title":"About Me"}]